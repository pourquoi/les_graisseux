# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration

parameters:
    router.request_context.host: '%env(HOST)%'
    router.request_context.scheme: '%env(SCHEME)%'
    router.request_context.base_url: '%env(BASE_URL)%'
    asset.request_context.base_path: '%router.request_context.base_url%'
    asset.request_context.secure: true
    kernel.default_locale: fr

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            $appEnv: '%env(APP_ENV)%'

    _instanceof:
        App\Utils\Dataset\DatasetProviderInterface:
            tags: ['app.dataset_provider']

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Swagger\SwaggerDecorator:
        decorates: 'api_platform.swagger.normalizer.documentation'
        arguments: ['@App\Swagger\SwaggerDecorator.inner']
        autoconfigure: false

    Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter: ~

    App\Doctrine\DoctrineTraitsSubscriber:
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    App\EventSubscriber\AuthenticationSuccessListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }

    # commands

    App\Command\DatasetUpdateCommand:
        arguments:
            - !tagged_iterator app.dataset_provider

    # utils
    App\Utils\Dataset\Provider\CarLogosProvider:
        bind:
            $fs: '@brand.storage'

    # serialization

    App\Serializer\PrivateMercureResourceNormalizer:
        decorates: 'api_platform.jsonld.normalizer.item'
        bind:
            $decorated: '@App\Serializer\PrivateMercureResourceNormalizer.inner'
            $jwt_key: '%env(MERCURE_JWT_KEY)%'

    App\Serializer\ComposedResourceNormalizer:
        decorates: 'App\Serializer\PrivateMercureResourceNormalizer'
        arguments: [ '@App\Serializer\ComposedResourceNormalizer.inner' ]

    # media

    Liip\ImagineBundle\Service\FilterService:
        alias: 'liip_imagine.service.filter'

    # mercure

    App\DataPersister\MercureDataPersister:
        bind:
            $decoratedDataPersister: '@api_platform.doctrine.orm.data_persister'

    # inject defaults doctrine data providers

    App\DataProvider\JobDataProvider:
        bind:
            $itemDataProvider: '@api_platform.doctrine.orm.default.item_data_provider'
            $collectionDataProvider: '@api_platform.doctrine.orm.default.collection_data_provider'

    App\DataProvider\JobApplicationDataProvider:
      bind:
        $itemDataProvider: '@api_platform.doctrine.orm.default.item_data_provider'
        $collectionDataProvider: '@api_platform.doctrine.orm.default.collection_data_provider'

    App\DataProvider\MechanicDataProvider:
        bind:
            $itemDataProvider: '@api_platform.doctrine.orm.default.item_data_provider'
            $collectionDataProvider: '@api_platform.doctrine.orm.default.collection_data_provider'

    App\DataProvider\ChatRoomDataProvider:
        bind:
            $itemDataProvider: '@api_platform.doctrine.orm.default.item_data_provider'
            $collectionDataProvider: '@api_platform.doctrine.orm.default.collection_data_provider'

    App\DataProvider\ChatMessageDataProvider:
        bind:
            $itemDataProvider: '@api_platform.doctrine.orm.default.item_data_provider'
            $collectionDataProvider: '@api_platform.doctrine.orm.default.collection_data_provider'
